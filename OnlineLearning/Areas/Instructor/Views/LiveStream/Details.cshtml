@{
    Layout = "~/Views/Shared/_CourseLayout.cshtml";
    <partial name="_NoficationPartial" />
}

@model ApiVideo.Model.LiveStream

<link rel="stylesheet" href="~/css/WatchLive.css" />

@if (User.IsInRole("Instructor"))
{
    <div class="container">
        <h3 class="display-4">Live Stream: @Model.name</h3>

        <div class="row">
            <!-- Live Stream Video Section -->
            <div class="col-md-8">
                <h2 class="mt-4">Watch Live</h2>
                <div class="embed-responsive embed-responsive-16by9">
                    @Html.Raw(Model.assets.iframe)
                </div>

                <div class="link-section mt-3">
                    <h2>Stream Player</h2>
                    <p><a href="@Model.assets.player" target="_blank" class="btn btn-primary">Open in Player</a></p>
                </div>

                <form asp-action="CompleteLiveStream" asp-controller="LiveStream" asp-route-liveStreamId="@Model.livestreamid" method="post">
                    <button type="submit" onclick="return confirm('End your livestream ?')" class="btn btn-success mt-3">
                        Complete Livestream
                    </button>
                </form>
            </div>
            @if (Model.broadcasting == true)
            {
                <!-- Chat Box Section -->
                <div class="col-md-4">
                    <h2 class="text-center">Live Chat</h2>
                <div id="chat-box" class="chat-box border rounded p-3">
                    <!-- Chat messages will appear here -->
                    <div id="chat-messages" class="overflow-auto" style="height: 400px;">
                        <!-- Example message -->
                        <p><strong>Instructor:</strong> Welcome to the live stream!</p>
                    </div>
                </div>

                <form id="chat-form" class="mt-3">
                    <div class="input-group">
                        <input type="text" id="chat-input" class="form-control" placeholder="Type a message..." />
                        <button type="button" id="send-message" class="btn btn-primary">Send</button>
                    </div>
                </form>
            </div>
            }
        </div>
    </div>
}
else
{
    <h3>You do not have permission</h3>
}
<script src="https://cdn.jsdelivr.net/npm/signalr@6.0.2/dist/browser/signalr.min.js"></script>
<script>
    const chatBox = document.getElementById("chat-messages");
    const chatInput = document.getElementById("chat-input");
    const sendMessageButton = document.getElementById("send-message");

    // Create connection to the SignalR hub
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    connection.on("ReceiveMessage", function (user, message) {
        const msg = document.createElement("p");
        msg.innerHTML = `<strong>${user}:</strong> ${message}`;
        chatBox.appendChild(msg);
        chatBox.scrollTop = chatBox.scrollHeight;
    });

    sendMessageButton.addEventListener("click", function () {
        const message = chatInput.value;
        if (message) {
            connection.invoke("SendMessage", "Instructor", message).catch(function (err) {
                return console.error(err.toString());
            });
            chatInput.value = "";
        }
    });

    // Start the connection
    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
</script>
